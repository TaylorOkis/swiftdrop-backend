generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id             String      @id @default(uuid())
  name           String      @unique
  email          String      @unique
  address        String
  color          String[] 
  logo           String?  
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  employees      Employee[]  
  orders         Order[]
}

model Employee {
  id          String          @id  @default(uuid())
  username    String?
  password    String      
  firstname   String
  middlename  String?
  lastname    String
  email       String
  phone       String
  company_id  String      
  role        Role        
  status      EmployeeStatus  @default(ACTIVE)
  image       String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  drivers     Driver[]
  orders      Order[]
  company     Company         @relation(fields: [company_id], references: [id], onDelete: Cascade)

  @@index([company_id])
}


model Driver {
  id                      String        @id    @default(uuid())
  employee_id             String        @unique
  plate_number            String
  guarantor_name          String
  guarantor_phone_number  String
  guarantor_address       String
  trip_status             TripStatus    @default(AVAILABLE)

  orders                  Order[]
  employee                Employee      @relation(fields: [employee_id], references: [id], onDelete: Cascade)
}

model Order {
  id                     String       @id  @default(uuid())
  sender_name            String
  sender_address         String
  sender_phone_number    String
  receiver_name          String
  receiver_address       String
  receiver_phone_number  String
  delivery_class         String
  item_class             String
  driver_note            String?
  status                 OrderStatus  @default(PENDING)
  driver_id              String?
  created_by             String?
  company_id             String
  createdAt              DateTime     @default(now())
  updatedAt              DateTime     @updatedAt

  driver                 Driver?      @relation(fields: [driver_id], references: [id], onDelete:  SetNull)
  dispatcher             Employee?    @relation(fields: [created_by], references: [id], onDelete: SetNull)
  company                Company      @relation(fields: [company_id], references: [id], onDelete: Cascade)

  @@index([company_id])
  @@index([status])
}

enum Role {
  ADMIN
  DRIVER
  DISPATCHER
}

enum EmployeeStatus {
  ACTIVE
  INACTIVE
}

enum TripStatus {
  AVAILABLE
  ON_TRIP
  OFFLINE
}

enum OrderStatus {
  PENDING
  ASSIGNED
  IN_TRANSIT
  DELIVERED
  CANCELLED
}
